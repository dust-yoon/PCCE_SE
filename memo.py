자료형
    int/(float)/str/bool () -> 자료형 변환 가능
        int(-3.23) = -3 -> 소수점 다 사라짐

변수
*알파벳, 언더바(_), 숫자로만 구성되어야 함
*첫 글자에는 숫자가 올 수 없음
*대소문자를 구별할 줄 알아야 함
*띄어쓰기가 필요할 경우 언더바로 표시
*예약어는 사용하지 않음
    변수 동시 할당 가능
        * x, y = 10,20
        * snippet_dic = {}
            for sublist in snippet:
                key, value = sublist
                snippet_dic[key] = value 이런식으로 활용가능

사용자 입력과 출력
    내장함수 input() -> 모두 type str
    내장함수 print() -> 띄어쓰기 기본값
    내장함수 end() -> 공백 없이 ()값 출력/다음 print 값 한 줄 안 띄우고

산술연산자
    논리 연산자 -> not a : a가 True 면 False , False 면 True 출력

조건문
    뭐,,,

컨테이너 자료형 ★
    리스트 []
        len([]) = int() : 길이 파악
        덧셈(+)과 곱셈(*) 가능
        list.append(29) : list 의 마지막에 29 추가
        list.pop() : list 마지막 원소 삭제. 특정 인덱스 원소 삭제도 가능 => 반환
        *indexing : 리스트 원소에 접근 및 수정
            list[-1] : 28 (수정)
        *slicing : 리스트 자르기
            list[0:3:-1] , list[::-1] -> 거꾸로 배열
    문자열 ""
        얘도 사실 문자의 집합체 즉, 하나의 컨테이너 자료형
        덧셈(+)과 곱셈(*) 가능
        *indexing : 문자열 원소에 접근O 수정X
            word[-1]
        *slicing : 문자열 자르기
            이거 이용해서 문자열 수정 가능
            word = "j" + word[1:]
            word[0:3:-1] , word[::-1] -> 거꾸로 배열
        *f-string : 문자열 안에 변수 삽입 가능
            word = f"내 이름은 {name}입니다."
            {} 여기 안에는 모든 자료형, 연산자, 내장함수 삽입가능
    레인지 ()
        연속된 정수 목록이 담겨있음
        range(1,2,-1) : 원소의 값을 확인하기보단 범위 설정에 가까움 -> for 반복문 이용해 출력
    컨테이너 형 변환/연산자
        1. 문자열 -> 리스트
            'word' => ['w', 'o', 'r', 'd']
        2. 레인지 -> 리스트
            range(10) => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        3. in, not in 연산자
            "w" in word = True
반복문
    for 변수 in 컨테이너:
    while 조건문:
        조건문의 결과가 참일 경우 계속 반복
        거짓일 경우 반복 중단
        증감식 이용하는 경우 많음(반복을 중단하기 위해-증감식 위치 조심하기)
        조건문 들어가는 변수 초기화 필요
    break(종료)
    continue(다음 반복으로 강제 이동)
기초 자요구조와 로직설계